{"version":3,"sources":["components/pages/Public.js","components/guideline/GuidelinePage.js","components/microservices/ImplementConceptPage.js","components/scrum/ScrumPage.js","components/knowledgesharing/GitHubPages.js","components/businessprocess/CallCenterCCPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Footer","Public","_ref","component","rest","Object","objectWithoutProperties","Route","assign","render","props","Public_Header","React","Public_Footer","team","name","TeamTable","GuidelinePage","map","item","GuidelinePage_TeamTable","key","href","target","ImplementConceptPage","marginBox","marginLeft","marginBottom","imageDiv","width","textAlign","style","alt","src","process","ScrumPage","GitHubPages","CallCenterCCPage","Routes","BrowserRouter","basename","Switch","pages_Public","exact","path","App","App_Routes","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85d96e46.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <Link to=\"/\">\r\n        <h1>Guideline Team</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Footer = () => {\r\n  return  (\r\n    <footer className=\"container-fluid text-center\">\r\n      <p>Made By Research and Development Technical Team </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nconst Public = ({ component, ...rest }) => (\r\n  <Route {...rest} render={(props) => {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          {React.createElement(component, props)}\r\n          <Footer />\r\n        </div>\r\n      )\r\n    }} />\r\n  )\r\n\r\n  export default Public\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst team = [\r\n  {\r\n    name: \"DepSecOps\"\r\n  },\r\n  {\r\n    name: \"Software Architecture\"\r\n  }\r\n]\r\n\r\nconst TeamTable = (props) => {\r\n  return(\r\n    <li>{props.name} Team\r\n      <ul>\r\n        <li>Mission</li>\r\n        <li>New member process</li>\r\n        <li>Team members</li>\r\n        <li>Responsibiity</li>\r\n        <li>Objectives</li>\r\n        <li>Project on team</li>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst GuidelinePage = () => {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <h2>Research and Development Technical Team</h2>\r\n          <ul>\r\n            <li>General\r\n              <ul>\r\n                <li><Link to=\"/microservices\">Microservice implement concept</Link></li>\r\n              </ul>\r\n            </li>\r\n            { team.map(item => <TeamTable key={item.name} {...item} />)}\r\n            <li>Knowledge Sharing\r\n              <ul>\r\n                <li><Link to=\"/githubPages\">GitHub Pages</Link></li>\r\n                <li><a href=\"https://github.com/arunsawad/research_technology\" target=\"_blank\" >Research Technology</a></li>\r\n                <li><a href=\"https://github.com/arunsawad/prototype_microservice\" target=\"_blank\" >Prototype Microservice</a></li>\r\n              </ul>\r\n            </li>\r\n            <li>Business Process\r\n              <ul>\r\n                <li><Link to=\"/CallCenterCCPage\">Call Center</Link></li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GuidelinePage\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ImplementConceptPage = () => {\r\n  let marginBox = {\r\n    marginLeft: 20,\r\n    marginBottom: 30\r\n  }\r\n  let imageDiv = {\r\n    width: 700,\r\n    textAlign: \"center\"\r\n  }\r\n  let imageDiv800 = {\r\n    width: 800,\r\n    textAlign: \"center\"\r\n  }\r\n  return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <h2>Microservice Implement Concept</h2>\r\n\r\n            <div style={marginBox}>\r\n              <h4>Work Process - Methodology Agile</h4>\r\n              <div style={{marginLeft:30}}>\r\n                <p><b>Scrum Framework</b> <Link to=\"/scrum\" style={{marginLeft:50}}>acitivity</Link> </p>\r\n                <div style={imageDiv}>\r\n                  <img alt=\"Scrum Framework\" width=\"700px\" src=\"https://scrumorg-website-prod.s3.amazonaws.com/drupal/inline-images/2017-05/ScrumFrameworkTest.png\" />\r\n                  Reference : <a href=\"https://www.scrum.org/resources/scrum-framework-poster\">https://www.scrum.org/resources/scrum-framework-poster</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={marginBox}>\r\n              <h4>Building Software - The twelve-factor App </h4>\r\n              <div style={{marginLeft:30}}>\r\n                <ul>\r\n                  <li><b>The Twelve Factors</b>\r\n                    <ul>\r\n                      <li><b>I. Codebase</b></li>\r\n                      <li><b>II. Dependencies</b></li>\r\n                      <li><b>III. Config</b></li>\r\n                      <li><b>IV. Backing services</b></li>\r\n                      <li><b>V. Build, release, run</b></li>\r\n                      <li><b>VI. Processes</b></li>\r\n                      <li><b>VII. Port binding</b></li>\r\n                      <li><b>VIII. Concurrency</b></li>\r\n                      <li><b>IX. Disposability</b></li>\r\n                      <li><b>X. Dev/prod parity</b></li>\r\n                      <li><b>XI. Logs</b></li>\r\n                      <li><b>XII. Admin processes</b></li>\r\n                    </ul>\r\n                  </li>\r\n\r\n                </ul>\r\n                Reference : <a href=\"https://12factor.net/\">https://12factor.net/</a>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={marginBox}>\r\n              <h4>Development and Deployment Process</h4>\r\n              <div style={{marginLeft:30}}>\r\n                <ul>\r\n                  <li><b>Development</b>\r\n                    <div style={imageDiv}>\r\n                      <img alt=\"Flow Development\" width=\"700px\" src={process.env.PUBLIC_URL + \"/images/flow-development.jpg\"} />\r\n                    </div>\r\n                  </li>\r\n                  <li><b>Pipeline</b>\r\n                    <ul>\r\n                      <li><b>1. Develop</b> (Pull-Request -> Code Review -> Merge)</li>\r\n                      <li><b>2. Unit Test</b></li>\r\n                      <li><b>3. Scan OWASP</b></li>\r\n                      <li><b>4. Scan Analysis</b></li>\r\n                      <li><b>5. Quality Gate</b></li>\r\n                      <li><b>6. Build</b></li>\r\n                      <li><b>7. Deploy</b></li>\r\n                      <li><b>8. Regression Test</b></li>\r\n                      <li><b>9. Performance Test</b></li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n                <div style={imageDiv800}>\r\n                  <img alt=\"Microservice Testing\" width=\"800px\" src={process.env.PUBLIC_URL + \"/images/pipeline.jpg\"} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={marginBox}>\r\n              <h4>Monitoring</h4>\r\n              <div style={{marginLeft:30}}>\r\n                <ul>\r\n                  <li><b>Server</b>\r\n                    <ul>\r\n                      <li><b>System Events</b></li>\r\n                        <li><b>Logs as event streams</b></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><b>Software</b>\r\n                    <ul>\r\n                      <li><b>Application Metrics</b></li>\r\n                      <li><b>Platfrom Metrics</b></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><b>Request/Response</b></li>\r\n                  <li><b>Monitoring Tools</b>\r\n                    <ul>\r\n                      <li><b>Prometheus</b></li>\r\n                      <li><b>Grafana</b></li>\r\n                      <li><b>Apache Kafka</b></li>\r\n                      <li><b>Zipkin</b></li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={marginBox}>\r\n              <h4>Testing - (Martinfowler articles)</h4>\r\n              <div style={{marginLeft:30}}>\r\n                <ul>\r\n                  <li><b>Unit Testing</b> - exercise the smallest pieces of testable software in the application to determine whether they behave as expected.\r\n                    <ul>\r\n                      <li><b>Unit - Solitary</b></li>\r\n                      <li><b>Unit - Sociable</b></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><b>Integration Testing</b> - verify the communication paths and interactions between components to detect interface defects.\r\n                    <ul>\r\n                      <li><b>Gateway integration test</b></li>\r\n                      <li><b>Persistence integration test</b></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><b>Component Testing</b> - limit the scope of the exercised software to aportion of the system under test, manipulating the system through internal code interfaces and using test doubles to isolate the code under test from other components.\r\n                    <ul>\r\n                      <li><b>Tests communicate with the microservice</b></li>\r\n                      <li><b>Isolate the microservice from external services</b></li>\r\n                      <li><b>Replacing an external datastore with an in-memory implementation</b></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><b>Contract Testing</b> - verify interactions at the boundary of an external service asserting that it meets the contract expected by a consuming service.\r\n                    <ul>\r\n                      <li><b>The sum of all consumer contract tests</b></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><b>End-To-End Testing</b> - verify that a system meets external requirements and achieves its goals, testing the entire system, from end to end.\r\n                    <ul>\r\n                      <li><b>The test boundary for end-to-end tests</b></li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n                <div style={imageDiv}>\r\n                  <img alt=\"Microservice Testing\" width=\"700px\" src={process.env.PUBLIC_URL + \"/images/microservice-testing.jpg\"} />\r\n                  Reference : <a href=\"https://martinfowler.com/articles/microservice-testing/#conclusion-summary\">https://martinfowler.com/articles/microservice-testing/#conclusion-summary</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ImplementConceptPage\r\n","import React from 'react'\r\n\r\nconst ScrumPage = (props) => {\r\n  let marginBox = {\r\n    marginLeft: 20,\r\n    marginBottom: 30\r\n  }\r\n  let imageDiv = {\r\n    width: 700,\r\n    textAlign: \"center\"\r\n  }\r\n  let imageDiv800 = {\r\n    width: 800,\r\n    textAlign: \"center\"\r\n  }\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <h2>Scrum Framework</h2>\r\n          <div style={marginBox}>\r\n            <ul>\r\n              <li>\r\n                <h4>Definitions</h4>\r\n                <ul>\r\n                  <li>\r\n                    <b>User Story:</b>\r\n                    <div >\r\n                      ความต้องการของผู้ใช้ ผลิตภัณฑ์ถูกพัฒนาขึ้นเพื่อแก้ไขปัญหาหรือตอบสนองความต้องการของผู้ใช้\r\n                    </div>\r\n                  </li>\r\n                  <li><b>Acceptance criteria</b></li>\r\n                  <li><b>Product Backlog</b></li>\r\n                  <li><b>Done</b></li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                <h4>Actors</h4>\r\n                <ul>\r\n                  <li><b>Product Owner</b></li>\r\n                  <li><b>Developer</b></li>\r\n                  <li><b>Scrum Master</b></li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                <h4>Activity</h4>\r\n                <div style={imageDiv}>\r\n                  <img alt=\"Scrum Framework\" width=\"700px\" src=\"https://2y5da6sqbsf4bertb26n96bz-wpengine.netdna-ssl.com/wp-content/uploads/scrumprocess.jpg\" />\r\n                  Reference :\r\n                  <a href=\"https://www.mimeo.com/blog/three-reasons-scrum-master-certified\">\r\n                    https://www.mimeo.com/blog/three-reasons-scrum-master-certified\r\n                  </a>\r\n                </div>\r\n                <ul>\r\n                  <li><b>Sprint Planing</b></li>\r\n                  <li><b>Daily Scrum</b></li>\r\n                  <li><b>Sprint Review</b></li>\r\n                  <li><b>Sprint Retrospective</b></li>\r\n                  <li><b>Product Backlog Refining (Grooming)</b></li>\r\n                  <li><b>Scrum Artifacts</b></li>\r\n                </ul>\r\n              </li>\r\n\r\n              <li>\r\n                <h4>Schedule Sprint</h4>\r\n                <ul>\r\n                  <li>\r\n                    <b>sprint -> 2 weeks</b>\r\n                  </li>\r\n                  <div style={imageDiv}>\r\n                    <a href={process.env.PUBLIC_URL + \"/images/sprint_2_weeks.jpg\"} target=\"_blank\">\r\n                      <img alt=\"Sprint 2 weeks\" width=\"800px\" src={process.env.PUBLIC_URL + \"/images/sprint_2_weeks.jpg\"} />\r\n                    </a>\r\n                  </div>\r\n                  <li>\r\n                    <b>sprint -> 1 week</b>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                Reference :\r\n                <a href=\"https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-US.pdf\">\r\n                  https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-US.pdf\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScrumPage\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst GitHubPages = () => {\r\n  let marginBox = {\r\n    marginLeft: 20,\r\n    marginBottom: 30\r\n  }\r\n  let imageDiv = {\r\n    width: 700,\r\n    textAlign: \"center\"\r\n  }\r\n  let imageDiv800 = {\r\n    width: 800,\r\n    textAlign: \"center\"\r\n  }\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <h2>GitHub Pages</h2>\r\n\r\n          <div style={marginBox}>\r\n            สามารถนำมาใช้เป็น Hosting สำหรับทำ Prototype แบบง่ายๆ ได้\r\n          </div>\r\n          <div style={marginBox}>\r\n            <h4>Implement</h4>\r\n            <div style={{marginLeft:30}}>\r\n              <ul>\r\n                <li><b>npm gh-pages</b></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div style={marginBox}>\r\n            <h4>Concept</h4>\r\n            <div style={imageDiv}>\r\n              <img alt=\"GitHubPages\" width=\"700px\" src={process.env.PUBLIC_URL + \"/images/githubpages.jpg\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GitHubPages\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CallCenterCCPage = () => {\r\n  let marginBox = {\r\n    marginLeft: 20,\r\n    marginBottom: 30\r\n  }\r\n  let imageDiv = {\r\n    width: 700,\r\n    textAlign: \"center\"\r\n  }\r\n  let imageDiv800 = {\r\n    width: 800,\r\n    textAlign: \"left\"\r\n  }\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <h2>Call Center</h2>\r\n          <div style={marginBox}>\r\n            <h4>Type-A (Insurance Only)</h4>\r\n            <div style={imageDiv}>\r\n              <img alt=\"CallCenter Type-A\" src={process.env.PUBLIC_URL + \"/images/callcenterType-A.jpg\"} />\r\n            </div>\r\n          </div>\r\n          <div style={marginBox}>\r\n            <h4>Type-B (Insurance Only)</h4>\r\n            <div style={imageDiv}>\r\n              <img alt=\"CallCenter Type-B\" src={process.env.PUBLIC_URL + \"/images/callcenterType-B.jpg\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CallCenterCCPage\r\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, Link, BrowserRouter as Router } from 'react-router-dom'\nimport './App.css';\nimport Public from './components/pages/Public'\nimport GuidelinePage from './components/guideline/GuidelinePage'\nimport ImplementConceptPage from './components/microservices/ImplementConceptPage'\nimport ScrumPage from './components/scrum/ScrumPage'\nimport GitHubPages from './components/knowledgesharing/GitHubPages'\nimport CallCenterCCPage from './components/businessprocess/CallCenterCCPage'\n\nconst Body = () => (\n  <div>Body {process.env.PUBLIC_URL} Test</div>\n)\nconst Page1 = () => (\n  <div>Page1</div>\n)\nconst Page2 = () => (\n  <div>Page2</div>\n)\n\nconst Routes = props => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div>\n      <Switch>\n        <Public exact path=\"/\" component={GuidelinePage} {...props} />\n        <Public exact path=\"/microservices\" component={ImplementConceptPage} {...props} />\n        <Public exact path=\"/scrum\" component={ScrumPage} {...props} />\n        <Public exact path=\"/githubPages\" component={GitHubPages} {...props} />\n        <Public exact path=\"/CallCenterCCPage\" component={CallCenterCCPage} {...props} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}